# vi: ft=zsh

# Source: http://michaelheap.com/pimp-your-zsh/
# More prompt expansion info at http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html

# Fills the color array so that we can do the '%{fg[red]%}'
autoload -U colors && colors

# Different char for each version control
function prompt_char {
  git branch >/dev/null 2>/dev/null && echo '±' && return
  hg root >/dev/null 2>/dev/null && echo '☿' && return
  echo '$'
}

function git_branch {
  BRANCH="$(git symbolic-ref HEAD 2>/dev/null | cut -d'/' -f3)"
  if ! test -z $BRANCH; then
    COL="%{$fg[green]%}" # Everything's fine
    [[ $(git log origin/master..HEAD 2> /dev/null ) != "" ]] && COL="%{$fg[blue]%}" # We have changes to push
    [[ $(git status --porcelain 2> /dev/null) != "" ]] && COL="%{$fg[red]%}" # We have uncommited changes
    echo "$COL$BRANCH"
  fi
}

function name() {
  # Only show name if it's different than my usual
  NAME=""
  if [[ $(whoami) != "michael" ]]; then
    NAME="%n%{$reset_color%}@"
  fi

  echo "%{$fg[red]%}$NAME"
}

function comp_name() {
  local color="%{$fg[green]%}"
  # %m is the TCs-MacBook-Pro-4 (which is my localhost name)
  local name="%m"
  echo "$color$name"
}

function path() {
  local color="%{$fg[yellow]%}"
  # %~ expands to the path
  local dir="%~"
  echo "$color$dir"
}

function reset_colors() {
  local reset="%{$reset_color%}"
  echo "$reset"
}

function precmd() {
  PROMPT="$(name)$(comp_name) $(path) $(reset_colors)$(prompt_char) "
  RPROMPT="$(git_branch)$(reset_colors)"
}
