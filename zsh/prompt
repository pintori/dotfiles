# vi: ft=zsh

# Source: http://michaelheap.com/pimp-your-zsh/
# More prompt expansion info at http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html

# Fills the color array so that we can do the '%{fg[red]%}'
autoload -U colors && colors
spectrum # Load spectrum function to enable $FG[010] stuff

# Different char for each version control
function prompt_char {
  local color_one="%{$fg[red]%}"
  local color_two="%{$fg[yellow]%}"
  local color_three="%{$fg[green]%}"
  local char="❯"
  # git branch >/dev/null 2>/dev/null && echo '±' && return
  # hg root >/dev/null 2>/dev/null && echo '☿' && return
  # echo '$'
  echo "$color_one$char$color_two$char$color_three$char"
}

function git_branch {
  BRANCH="$(git symbolic-ref HEAD 2>/dev/null | cut -d'/' -f3)"
  if ! test -z $BRANCH; then
    local parens_color="$FG[000]"
    # Default to everything is fine
    COL="%{$fg[green]%}"

    if [[ $(git status --porcelain 2> /dev/null) != "" ]]; then
      # We have uncommited changes
      COL="%{$fg[red]%}"
    # elif [[ $(git log origin/master..HEAD 2> /dev/null) != "" ]]; then
    #   # We have changes on local that aren't on server
    #   COL="%{$fg[blue]%}"
    elif [[ $(git log @{u}..HEAD 2> /dev/null) != "" ]]; then
      # We have changes to push
      COL="%{$fg[blue]%}"
    fi

    local left_parens="$parens_color("
    local right_parens="$parens_color)"
    echo "$left_parens$COL$BRANCH$right_parens"
  fi
}

function name() {
  # Only show name if it's different than my usual
  NAME=""
  if [[ $(whoami) != "trentscheffert" ]]; then
    NAME="%n%{$reset_color%}"
  fi

  echo "%{$fg[red]%}$NAME"
}

function comp_name() {
  local color="%{$fg[green]%}"
  # %m is the TCs-MacBook-Pro-4 (which is my localhost name)
  local name="%m"
  echo "$color$name"
}

function path() {
  local color="%{$fg[yellow]%}"
  # %~ expands to the current working directory but if it starts with $HOME
  #   then replace that with a '~'
  local dir="%~"
  local left_bracket="["
  local right_bracket="]"
  echo "$color$left_bracket$dir$right_bracket"
}

function reset_colors() {
  local reset="%{$reset_color%}"
  echo "$reset"
}

function line_number() {
  local color="%{$fg[magenta]%}"
  local ln="%!"
  echo "$color$ln"
}

function precmd() {
PROMPT="$(line_number) $(name)$(path)$(git_branch) $(prompt_char)$(reset_colors) "
  # RPROMPT="$(git_branch)$(reset_colors)"
}
